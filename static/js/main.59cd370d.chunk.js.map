{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyboardEvent","event","console","log","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,2BAFhB,EAaEC,oBAAsB,SAACC,GAErBC,QAAQC,IAAIF,EAAMG,KAElB,EAAKC,SAAS,CAAEN,WAAYE,EAAMG,OAjBtC,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKR,uBAN5C,kCASE,WACEM,SAASG,oBAAoB,QAASD,KAAKR,uBAV/C,oBAoBE,WACE,IAAQD,EAAeS,KAAKV,MAApBC,WAER,OACE,qBAAKW,UAAU,MAAf,SACkB,4BAAfX,EACG,4BAAIA,IAEJ,wDAEG,IAFH,WAGOA,EAHP,cA5BZ,GAAyBY,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.59cd370d.chunk.js","sourcesContent":["// import { event } from 'cypress/types/jquery';\nimport { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyboardEvent);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyboardEvent);\n  }\n\n  handleKeyboardEvent = (event: KeyboardEvent) => {\n    // eslint-disable-next-line no-console\n    console.log(event.key);\n\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {pressedKey === 'Nothing was pressed yet'\n          ? <p>{pressedKey}</p>\n          : (\n            <p>\n              The last pressed key is\n              {' '}\n              {`\"${pressedKey}\"`}\n            </p>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}